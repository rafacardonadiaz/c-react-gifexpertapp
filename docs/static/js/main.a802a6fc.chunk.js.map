{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","console","log","useFetchGifs","GifExpertApp","categories","categoria","ReactDOM","render","document","getElementById"],"mappings":"oNAIe,SAASA,EAAT,GAAyC,IAAlBC,EAAiB,EAAjBA,cAGlC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OAEI,aADA,CACA,QAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,GAE5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,QAQ5C,SAEI,uBACIC,KAAK,OACLC,MAAQT,EACRU,SAtBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,YA4BhCZ,EAAYe,UAAY,CACpBd,cAAee,IAAUC,KAAKC,Y,YCpCrBC,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAIjC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,4BAAKA,Q,uBCTJK,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAETN,EAFS,iDAEwCO,UAAUF,GAFlD,+DAGIG,MAAOR,GAHX,cAGTS,EAHS,gBAIQA,EAAKC,OAJb,uBAIPC,EAJO,EAIPA,KAGFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAZ3B,kBAmBRY,GAnBQ,4CAAH,sDCKPM,EAAU,SAAC,GAAmB,IAAhBb,EAAe,EAAfA,SAKvB,ECRwB,SAAEA,GAE1B,MAA0BxB,mBAAS,CAC/B8B,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAdAC,qBAAY,WACRlB,EAASC,GACJkB,MAAO,SAAAC,GAGAC,QAAQC,IAAIF,GACZH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAI1B,CAAEd,IAEEe,EDdyBO,CAActB,GAAjCW,EAAb,EAAQL,KAAaQ,EAArB,EAAqBA,QAWrB,OACI,qCACI,6BAAMd,IAEJc,GAAW,mBAAGlB,UAAU,wCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEQe,EAAOH,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADGA,EAAIC,aEOzBa,EAnCM,WAGjB,MAAoC/C,mBAAS,CAAC,cAA9C,mBAAOgD,EAAP,KAAmBjD,EAAnB,KAQA,OACI,qCACI,8CACA,cAACD,EAAD,CAAcC,cAAgBA,IAC9B,uBAIA,6BAEQiD,EAAWhB,KAAI,SAAAiB,GAAS,OAExB,aADA,CACC,EAAD,CAEIzB,SAAayB,GADLA,Y,MCpBhCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a802a6fc.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function AddCategory( {setCategories} ) {\r\n\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ){\r\n            //console.log('Submit Hecho');\r\n            setCategories( cats => [ inputValue, ...cats ]);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        // <>\r\n        <form onSubmit={ handleSubmit }>\r\n            {/* <h1>{ inputValue }</h1> */}\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            /> \r\n        </form>\r\n        // </>\r\n    )\r\n}\r\n\r\nAddCategory.prototype = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nimport React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n    //console.log( id, title, url );\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title }/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getGifs = async ( category ) => {\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=WBJKR57q9La7v6n0JWNq0vKXIZDEycKc`;\r\n        const resp = await fetch( url );\r\n        const { data } = await resp.json();\r\n\r\n        \r\n        const gifs = data.map( img => {\r\n\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n\r\n            }\r\n        })\r\n\r\n        // console.log( gifs );\r\n        // setImages( gifs );\r\n        return gifs;\r\n\r\n    }\r\n","//import React , { useState, useEffect} from 'react';\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"\r\n\r\nexport const GifGrid = ( { category }) => {\r\n     \r\n    // //const [count, setCount] = useState(0);\r\n    // const [images, setImages] = useState([]);\r\n\r\n    const { data:images, loading} = useFetchGifs( category );\r\n    //console.log(data);\r\n\r\n    // // hace que solo se ejecute una vez getGifs y no cada vez que cambien un componenete de la pagina.\r\n    // useEffect ( () => {\r\n    //     getGifs( category )\r\n    //         .then ( setImages );\r\n    // }, [ category ])\r\n\r\n    //getGifs();\r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n\r\n            { loading && <p className=\"card animate__animated animate__flash\">Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img =>  (\r\n                        <GifGridItem \r\n                            key = { img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    // // hace que solo se ejecute una vez getGifs y no cada vez que cambien un componenete de la pagina.\r\n    useEffect ( () => {\r\n        getGifs( category )\r\n            .then ( imgs => {\r\n\r\n\r\n                    console.log(imgs);\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n\r\n            })\r\n    }, [ category ])\r\n\r\n    return state;\r\n}","import { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handledAdd   = () =>{\r\n\r\n    //     //setCategories([...categories,'HunterXHunter']);\r\n    //     setCategories( cats => [...categories,'HunterXHunter']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory  setCategories={ setCategories } />\r\n            <hr/>\r\n\r\n            {/* <button onClick={ handledAdd }>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(categoria =>  (\r\n                    // <li key={ categoria }>{ categoria }</li>\r\n                    <GifGrid \r\n                        key = { categoria }\r\n                        category = { categoria }\r\n                    />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\n\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}